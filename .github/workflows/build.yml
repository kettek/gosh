name: Build Executables
on:
  push:
    tags:
      - v*
  workflow_dispatch:
jobs:
  build-lin:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Install dependencies
        shell: bash
        run: sudo apt-get update && sudo apt-get -y install gcc libgl1-mesa-dev xorg-dev
      - name: Install Fyne
        shell: bash
        run: go install fyne.io/fyne/v2/cmd/fyne@latest
      - name: Build
        shell: bash
        run: fyne package
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: package-lin
          path: gosh.tar.xz
  build-win:
    name: Build Windows
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: git mingw-w64-ucrt-x86_64-gcc
          path-type: inherit
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Setup shell
        run: echo "export PATH=\$PATH:/c/Program\ Files/Go/bin:~/Go/bin" >> ~/.bashrc
      - name: Install Fyne
        run: go install fyne.io/fyne/v2/cmd/fyne@latest
      - name: Build
        run: fyne package
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: package-win
          path: gosh.exe
  build-mac:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Install Fyne
        shell: bash
        run: go install fyne.io/fyne/v2/cmd/fyne@latest
      - name: Build
        shell: bash
        run: fyne package
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: package-mac
          path: gosh.app
  release:
    name: Release built binaries
    runs-on: ubuntu-latest
    needs: [build-lin, build-win]
    steps:
    - uses: actions/checkout@v3
    - name: Download Linux binary
      uses: actions/download-artifact@v3
      with:
        name: package-lin
    - name: Download Windows binary
      uses: actions/download-artifact@v3
      with:
        name: package-win
    - name: Download macOS binary
      uses: actions/download-artifact@v3
      with:
        name: package-mac
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          gosh.tar.xz
          gosh.exe
          gosh.app
